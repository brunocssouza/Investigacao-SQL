
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `movimentacoes` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model movimentacoes
 * 
 */
export type movimentacoesModel = runtime.Types.Result.DefaultSelection<Prisma.$movimentacoesPayload>

export type AggregateMovimentacoes = {
  _count: MovimentacoesCountAggregateOutputType | null
  _avg: MovimentacoesAvgAggregateOutputType | null
  _sum: MovimentacoesSumAggregateOutputType | null
  _min: MovimentacoesMinAggregateOutputType | null
  _max: MovimentacoesMaxAggregateOutputType | null
}

export type MovimentacoesAvgAggregateOutputType = {
  id: number | null
  obra_id: number | null
  sala_origem: number | null
  sala_destino: number | null
  responsavel_id: number | null
}

export type MovimentacoesSumAggregateOutputType = {
  id: number | null
  obra_id: number | null
  sala_origem: number | null
  sala_destino: number | null
  responsavel_id: number | null
}

export type MovimentacoesMinAggregateOutputType = {
  id: number | null
  obra_id: number | null
  sala_origem: number | null
  sala_destino: number | null
  data: Date | null
  hora: Date | null
  responsavel_id: number | null
  acao: string | null
}

export type MovimentacoesMaxAggregateOutputType = {
  id: number | null
  obra_id: number | null
  sala_origem: number | null
  sala_destino: number | null
  data: Date | null
  hora: Date | null
  responsavel_id: number | null
  acao: string | null
}

export type MovimentacoesCountAggregateOutputType = {
  id: number
  obra_id: number
  sala_origem: number
  sala_destino: number
  data: number
  hora: number
  responsavel_id: number
  acao: number
  _all: number
}


export type MovimentacoesAvgAggregateInputType = {
  id?: true
  obra_id?: true
  sala_origem?: true
  sala_destino?: true
  responsavel_id?: true
}

export type MovimentacoesSumAggregateInputType = {
  id?: true
  obra_id?: true
  sala_origem?: true
  sala_destino?: true
  responsavel_id?: true
}

export type MovimentacoesMinAggregateInputType = {
  id?: true
  obra_id?: true
  sala_origem?: true
  sala_destino?: true
  data?: true
  hora?: true
  responsavel_id?: true
  acao?: true
}

export type MovimentacoesMaxAggregateInputType = {
  id?: true
  obra_id?: true
  sala_origem?: true
  sala_destino?: true
  data?: true
  hora?: true
  responsavel_id?: true
  acao?: true
}

export type MovimentacoesCountAggregateInputType = {
  id?: true
  obra_id?: true
  sala_origem?: true
  sala_destino?: true
  data?: true
  hora?: true
  responsavel_id?: true
  acao?: true
  _all?: true
}

export type MovimentacoesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which movimentacoes to aggregate.
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of movimentacoes to fetch.
   */
  orderBy?: Prisma.movimentacoesOrderByWithRelationInput | Prisma.movimentacoesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.movimentacoesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` movimentacoes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` movimentacoes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned movimentacoes
  **/
  _count?: true | MovimentacoesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: MovimentacoesAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: MovimentacoesSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: MovimentacoesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: MovimentacoesMaxAggregateInputType
}

export type GetMovimentacoesAggregateType<T extends MovimentacoesAggregateArgs> = {
      [P in keyof T & keyof AggregateMovimentacoes]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateMovimentacoes[P]>
    : Prisma.GetScalarType<T[P], AggregateMovimentacoes[P]>
}




export type movimentacoesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.movimentacoesWhereInput
  orderBy?: Prisma.movimentacoesOrderByWithAggregationInput | Prisma.movimentacoesOrderByWithAggregationInput[]
  by: Prisma.MovimentacoesScalarFieldEnum[] | Prisma.MovimentacoesScalarFieldEnum
  having?: Prisma.movimentacoesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: MovimentacoesCountAggregateInputType | true
  _avg?: MovimentacoesAvgAggregateInputType
  _sum?: MovimentacoesSumAggregateInputType
  _min?: MovimentacoesMinAggregateInputType
  _max?: MovimentacoesMaxAggregateInputType
}

export type MovimentacoesGroupByOutputType = {
  id: number
  obra_id: number | null
  sala_origem: number | null
  sala_destino: number | null
  data: Date | null
  hora: Date | null
  responsavel_id: number | null
  acao: string | null
  _count: MovimentacoesCountAggregateOutputType | null
  _avg: MovimentacoesAvgAggregateOutputType | null
  _sum: MovimentacoesSumAggregateOutputType | null
  _min: MovimentacoesMinAggregateOutputType | null
  _max: MovimentacoesMaxAggregateOutputType | null
}

type GetMovimentacoesGroupByPayload<T extends movimentacoesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<MovimentacoesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof MovimentacoesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], MovimentacoesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], MovimentacoesGroupByOutputType[P]>
      }
    >
  >



export type movimentacoesWhereInput = {
  AND?: Prisma.movimentacoesWhereInput | Prisma.movimentacoesWhereInput[]
  OR?: Prisma.movimentacoesWhereInput[]
  NOT?: Prisma.movimentacoesWhereInput | Prisma.movimentacoesWhereInput[]
  id?: Prisma.IntFilter<"movimentacoes"> | number
  obra_id?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  sala_origem?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  sala_destino?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  data?: Prisma.DateTimeNullableFilter<"movimentacoes"> | Date | string | null
  hora?: Prisma.DateTimeNullableFilter<"movimentacoes"> | Date | string | null
  responsavel_id?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  acao?: Prisma.StringNullableFilter<"movimentacoes"> | string | null
}

export type movimentacoesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_origem?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_destino?: Prisma.SortOrderInput | Prisma.SortOrder
  data?: Prisma.SortOrderInput | Prisma.SortOrder
  hora?: Prisma.SortOrderInput | Prisma.SortOrder
  responsavel_id?: Prisma.SortOrderInput | Prisma.SortOrder
  acao?: Prisma.SortOrderInput | Prisma.SortOrder
  _relevance?: Prisma.movimentacoesOrderByRelevanceInput
}

export type movimentacoesWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.movimentacoesWhereInput | Prisma.movimentacoesWhereInput[]
  OR?: Prisma.movimentacoesWhereInput[]
  NOT?: Prisma.movimentacoesWhereInput | Prisma.movimentacoesWhereInput[]
  obra_id?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  sala_origem?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  sala_destino?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  data?: Prisma.DateTimeNullableFilter<"movimentacoes"> | Date | string | null
  hora?: Prisma.DateTimeNullableFilter<"movimentacoes"> | Date | string | null
  responsavel_id?: Prisma.IntNullableFilter<"movimentacoes"> | number | null
  acao?: Prisma.StringNullableFilter<"movimentacoes"> | string | null
}, "id">

export type movimentacoesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_origem?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_destino?: Prisma.SortOrderInput | Prisma.SortOrder
  data?: Prisma.SortOrderInput | Prisma.SortOrder
  hora?: Prisma.SortOrderInput | Prisma.SortOrder
  responsavel_id?: Prisma.SortOrderInput | Prisma.SortOrder
  acao?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.movimentacoesCountOrderByAggregateInput
  _avg?: Prisma.movimentacoesAvgOrderByAggregateInput
  _max?: Prisma.movimentacoesMaxOrderByAggregateInput
  _min?: Prisma.movimentacoesMinOrderByAggregateInput
  _sum?: Prisma.movimentacoesSumOrderByAggregateInput
}

export type movimentacoesScalarWhereWithAggregatesInput = {
  AND?: Prisma.movimentacoesScalarWhereWithAggregatesInput | Prisma.movimentacoesScalarWhereWithAggregatesInput[]
  OR?: Prisma.movimentacoesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.movimentacoesScalarWhereWithAggregatesInput | Prisma.movimentacoesScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"movimentacoes"> | number
  obra_id?: Prisma.IntNullableWithAggregatesFilter<"movimentacoes"> | number | null
  sala_origem?: Prisma.IntNullableWithAggregatesFilter<"movimentacoes"> | number | null
  sala_destino?: Prisma.IntNullableWithAggregatesFilter<"movimentacoes"> | number | null
  data?: Prisma.DateTimeNullableWithAggregatesFilter<"movimentacoes"> | Date | string | null
  hora?: Prisma.DateTimeNullableWithAggregatesFilter<"movimentacoes"> | Date | string | null
  responsavel_id?: Prisma.IntNullableWithAggregatesFilter<"movimentacoes"> | number | null
  acao?: Prisma.StringNullableWithAggregatesFilter<"movimentacoes"> | string | null
}

export type movimentacoesCreateInput = {
  id: number
  obra_id?: number | null
  sala_origem?: number | null
  sala_destino?: number | null
  data?: Date | string | null
  hora?: Date | string | null
  responsavel_id?: number | null
  acao?: string | null
}

export type movimentacoesUncheckedCreateInput = {
  id: number
  obra_id?: number | null
  sala_origem?: number | null
  sala_destino?: number | null
  data?: Date | string | null
  hora?: Date | string | null
  responsavel_id?: number | null
  acao?: string | null
}

export type movimentacoesUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  obra_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_origem?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_destino?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  responsavel_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  acao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type movimentacoesUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  obra_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_origem?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_destino?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  responsavel_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  acao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type movimentacoesCreateManyInput = {
  id: number
  obra_id?: number | null
  sala_origem?: number | null
  sala_destino?: number | null
  data?: Date | string | null
  hora?: Date | string | null
  responsavel_id?: number | null
  acao?: string | null
}

export type movimentacoesUpdateManyMutationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  obra_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_origem?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_destino?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  responsavel_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  acao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type movimentacoesUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  obra_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_origem?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_destino?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  responsavel_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  acao?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type movimentacoesOrderByRelevanceInput = {
  fields: Prisma.movimentacoesOrderByRelevanceFieldEnum | Prisma.movimentacoesOrderByRelevanceFieldEnum[]
  sort: Prisma.SortOrder
  search: string
}

export type movimentacoesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrder
  sala_origem?: Prisma.SortOrder
  sala_destino?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  responsavel_id?: Prisma.SortOrder
  acao?: Prisma.SortOrder
}

export type movimentacoesAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrder
  sala_origem?: Prisma.SortOrder
  sala_destino?: Prisma.SortOrder
  responsavel_id?: Prisma.SortOrder
}

export type movimentacoesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrder
  sala_origem?: Prisma.SortOrder
  sala_destino?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  responsavel_id?: Prisma.SortOrder
  acao?: Prisma.SortOrder
}

export type movimentacoesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrder
  sala_origem?: Prisma.SortOrder
  sala_destino?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora?: Prisma.SortOrder
  responsavel_id?: Prisma.SortOrder
  acao?: Prisma.SortOrder
}

export type movimentacoesSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  obra_id?: Prisma.SortOrder
  sala_origem?: Prisma.SortOrder
  sala_destino?: Prisma.SortOrder
  responsavel_id?: Prisma.SortOrder
}



export type movimentacoesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  obra_id?: boolean
  sala_origem?: boolean
  sala_destino?: boolean
  data?: boolean
  hora?: boolean
  responsavel_id?: boolean
  acao?: boolean
}, ExtArgs["result"]["movimentacoes"]>



export type movimentacoesSelectScalar = {
  id?: boolean
  obra_id?: boolean
  sala_origem?: boolean
  sala_destino?: boolean
  data?: boolean
  hora?: boolean
  responsavel_id?: boolean
  acao?: boolean
}

export type movimentacoesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "obra_id" | "sala_origem" | "sala_destino" | "data" | "hora" | "responsavel_id" | "acao", ExtArgs["result"]["movimentacoes"]>

export type $movimentacoesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "movimentacoes"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    obra_id: number | null
    sala_origem: number | null
    sala_destino: number | null
    data: Date | null
    hora: Date | null
    responsavel_id: number | null
    acao: string | null
  }, ExtArgs["result"]["movimentacoes"]>
  composites: {}
}

export type movimentacoesGetPayload<S extends boolean | null | undefined | movimentacoesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload, S>

export type movimentacoesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<movimentacoesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: MovimentacoesCountAggregateInputType | true
  }

export interface movimentacoesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['movimentacoes'], meta: { name: 'movimentacoes' } }
  /**
   * Find zero or one Movimentacoes that matches the filter.
   * @param {movimentacoesFindUniqueArgs} args - Arguments to find a Movimentacoes
   * @example
   * // Get one Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends movimentacoesFindUniqueArgs>(args: Prisma.SelectSubset<T, movimentacoesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Movimentacoes that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {movimentacoesFindUniqueOrThrowArgs} args - Arguments to find a Movimentacoes
   * @example
   * // Get one Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends movimentacoesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, movimentacoesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Movimentacoes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesFindFirstArgs} args - Arguments to find a Movimentacoes
   * @example
   * // Get one Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends movimentacoesFindFirstArgs>(args?: Prisma.SelectSubset<T, movimentacoesFindFirstArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Movimentacoes that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesFindFirstOrThrowArgs} args - Arguments to find a Movimentacoes
   * @example
   * // Get one Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends movimentacoesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, movimentacoesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Movimentacoes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findMany()
   * 
   * // Get first 10 Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const movimentacoesWithIdOnly = await prisma.movimentacoes.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends movimentacoesFindManyArgs>(args?: Prisma.SelectSubset<T, movimentacoesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Movimentacoes.
   * @param {movimentacoesCreateArgs} args - Arguments to create a Movimentacoes.
   * @example
   * // Create one Movimentacoes
   * const Movimentacoes = await prisma.movimentacoes.create({
   *   data: {
   *     // ... data to create a Movimentacoes
   *   }
   * })
   * 
   */
  create<T extends movimentacoesCreateArgs>(args: Prisma.SelectSubset<T, movimentacoesCreateArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Movimentacoes.
   * @param {movimentacoesCreateManyArgs} args - Arguments to create many Movimentacoes.
   * @example
   * // Create many Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends movimentacoesCreateManyArgs>(args?: Prisma.SelectSubset<T, movimentacoesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Movimentacoes.
   * @param {movimentacoesDeleteArgs} args - Arguments to delete one Movimentacoes.
   * @example
   * // Delete one Movimentacoes
   * const Movimentacoes = await prisma.movimentacoes.delete({
   *   where: {
   *     // ... filter to delete one Movimentacoes
   *   }
   * })
   * 
   */
  delete<T extends movimentacoesDeleteArgs>(args: Prisma.SelectSubset<T, movimentacoesDeleteArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Movimentacoes.
   * @param {movimentacoesUpdateArgs} args - Arguments to update one Movimentacoes.
   * @example
   * // Update one Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends movimentacoesUpdateArgs>(args: Prisma.SelectSubset<T, movimentacoesUpdateArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Movimentacoes.
   * @param {movimentacoesDeleteManyArgs} args - Arguments to filter Movimentacoes to delete.
   * @example
   * // Delete a few Movimentacoes
   * const { count } = await prisma.movimentacoes.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends movimentacoesDeleteManyArgs>(args?: Prisma.SelectSubset<T, movimentacoesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Movimentacoes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends movimentacoesUpdateManyArgs>(args: Prisma.SelectSubset<T, movimentacoesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Movimentacoes.
   * @param {movimentacoesUpsertArgs} args - Arguments to update or create a Movimentacoes.
   * @example
   * // Update or create a Movimentacoes
   * const movimentacoes = await prisma.movimentacoes.upsert({
   *   create: {
   *     // ... data to create a Movimentacoes
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Movimentacoes we want to update
   *   }
   * })
   */
  upsert<T extends movimentacoesUpsertArgs>(args: Prisma.SelectSubset<T, movimentacoesUpsertArgs<ExtArgs>>): Prisma.Prisma__movimentacoesClient<runtime.Types.Result.GetResult<Prisma.$movimentacoesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Movimentacoes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesCountArgs} args - Arguments to filter Movimentacoes to count.
   * @example
   * // Count the number of Movimentacoes
   * const count = await prisma.movimentacoes.count({
   *   where: {
   *     // ... the filter for the Movimentacoes we want to count
   *   }
   * })
  **/
  count<T extends movimentacoesCountArgs>(
    args?: Prisma.Subset<T, movimentacoesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], MovimentacoesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Movimentacoes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {MovimentacoesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends MovimentacoesAggregateArgs>(args: Prisma.Subset<T, MovimentacoesAggregateArgs>): Prisma.PrismaPromise<GetMovimentacoesAggregateType<T>>

  /**
   * Group by Movimentacoes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {movimentacoesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends movimentacoesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: movimentacoesGroupByArgs['orderBy'] }
      : { orderBy?: movimentacoesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, movimentacoesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMovimentacoesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the movimentacoes model
 */
readonly fields: movimentacoesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for movimentacoes.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__movimentacoesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the movimentacoes model
 */
export interface movimentacoesFieldRefs {
  readonly id: Prisma.FieldRef<"movimentacoes", 'Int'>
  readonly obra_id: Prisma.FieldRef<"movimentacoes", 'Int'>
  readonly sala_origem: Prisma.FieldRef<"movimentacoes", 'Int'>
  readonly sala_destino: Prisma.FieldRef<"movimentacoes", 'Int'>
  readonly data: Prisma.FieldRef<"movimentacoes", 'DateTime'>
  readonly hora: Prisma.FieldRef<"movimentacoes", 'DateTime'>
  readonly responsavel_id: Prisma.FieldRef<"movimentacoes", 'Int'>
  readonly acao: Prisma.FieldRef<"movimentacoes", 'String'>
}
    

// Custom InputTypes
/**
 * movimentacoes findUnique
 */
export type movimentacoesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter, which movimentacoes to fetch.
   */
  where: Prisma.movimentacoesWhereUniqueInput
}

/**
 * movimentacoes findUniqueOrThrow
 */
export type movimentacoesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter, which movimentacoes to fetch.
   */
  where: Prisma.movimentacoesWhereUniqueInput
}

/**
 * movimentacoes findFirst
 */
export type movimentacoesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter, which movimentacoes to fetch.
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of movimentacoes to fetch.
   */
  orderBy?: Prisma.movimentacoesOrderByWithRelationInput | Prisma.movimentacoesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for movimentacoes.
   */
  cursor?: Prisma.movimentacoesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` movimentacoes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` movimentacoes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of movimentacoes.
   */
  distinct?: Prisma.MovimentacoesScalarFieldEnum | Prisma.MovimentacoesScalarFieldEnum[]
}

/**
 * movimentacoes findFirstOrThrow
 */
export type movimentacoesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter, which movimentacoes to fetch.
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of movimentacoes to fetch.
   */
  orderBy?: Prisma.movimentacoesOrderByWithRelationInput | Prisma.movimentacoesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for movimentacoes.
   */
  cursor?: Prisma.movimentacoesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` movimentacoes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` movimentacoes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of movimentacoes.
   */
  distinct?: Prisma.MovimentacoesScalarFieldEnum | Prisma.MovimentacoesScalarFieldEnum[]
}

/**
 * movimentacoes findMany
 */
export type movimentacoesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter, which movimentacoes to fetch.
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of movimentacoes to fetch.
   */
  orderBy?: Prisma.movimentacoesOrderByWithRelationInput | Prisma.movimentacoesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing movimentacoes.
   */
  cursor?: Prisma.movimentacoesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` movimentacoes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` movimentacoes.
   */
  skip?: number
  distinct?: Prisma.MovimentacoesScalarFieldEnum | Prisma.MovimentacoesScalarFieldEnum[]
}

/**
 * movimentacoes create
 */
export type movimentacoesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * The data needed to create a movimentacoes.
   */
  data: Prisma.XOR<Prisma.movimentacoesCreateInput, Prisma.movimentacoesUncheckedCreateInput>
}

/**
 * movimentacoes createMany
 */
export type movimentacoesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many movimentacoes.
   */
  data: Prisma.movimentacoesCreateManyInput | Prisma.movimentacoesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * movimentacoes update
 */
export type movimentacoesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * The data needed to update a movimentacoes.
   */
  data: Prisma.XOR<Prisma.movimentacoesUpdateInput, Prisma.movimentacoesUncheckedUpdateInput>
  /**
   * Choose, which movimentacoes to update.
   */
  where: Prisma.movimentacoesWhereUniqueInput
}

/**
 * movimentacoes updateMany
 */
export type movimentacoesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update movimentacoes.
   */
  data: Prisma.XOR<Prisma.movimentacoesUpdateManyMutationInput, Prisma.movimentacoesUncheckedUpdateManyInput>
  /**
   * Filter which movimentacoes to update
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * Limit how many movimentacoes to update.
   */
  limit?: number
}

/**
 * movimentacoes upsert
 */
export type movimentacoesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * The filter to search for the movimentacoes to update in case it exists.
   */
  where: Prisma.movimentacoesWhereUniqueInput
  /**
   * In case the movimentacoes found by the `where` argument doesn't exist, create a new movimentacoes with this data.
   */
  create: Prisma.XOR<Prisma.movimentacoesCreateInput, Prisma.movimentacoesUncheckedCreateInput>
  /**
   * In case the movimentacoes was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.movimentacoesUpdateInput, Prisma.movimentacoesUncheckedUpdateInput>
}

/**
 * movimentacoes delete
 */
export type movimentacoesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
  /**
   * Filter which movimentacoes to delete.
   */
  where: Prisma.movimentacoesWhereUniqueInput
}

/**
 * movimentacoes deleteMany
 */
export type movimentacoesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which movimentacoes to delete
   */
  where?: Prisma.movimentacoesWhereInput
  /**
   * Limit how many movimentacoes to delete.
   */
  limit?: number
}

/**
 * movimentacoes without action
 */
export type movimentacoesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the movimentacoes
   */
  select?: Prisma.movimentacoesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the movimentacoes
   */
  omit?: Prisma.movimentacoesOmit<ExtArgs> | null
}
