
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `acessos` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model acessos
 * 
 */
export type acessosModel = runtime.Types.Result.DefaultSelection<Prisma.$acessosPayload>

export type AggregateAcessos = {
  _count: AcessosCountAggregateOutputType | null
  _avg: AcessosAvgAggregateOutputType | null
  _sum: AcessosSumAggregateOutputType | null
  _min: AcessosMinAggregateOutputType | null
  _max: AcessosMaxAggregateOutputType | null
}

export type AcessosAvgAggregateOutputType = {
  id: number | null
  funcionario_id: number | null
  sala_id: number | null
}

export type AcessosSumAggregateOutputType = {
  id: number | null
  funcionario_id: number | null
  sala_id: number | null
}

export type AcessosMinAggregateOutputType = {
  id: number | null
  funcionario_id: number | null
  sala_id: number | null
  data: Date | null
  hora_entrada: Date | null
  hora_saida: Date | null
}

export type AcessosMaxAggregateOutputType = {
  id: number | null
  funcionario_id: number | null
  sala_id: number | null
  data: Date | null
  hora_entrada: Date | null
  hora_saida: Date | null
}

export type AcessosCountAggregateOutputType = {
  id: number
  funcionario_id: number
  sala_id: number
  data: number
  hora_entrada: number
  hora_saida: number
  _all: number
}


export type AcessosAvgAggregateInputType = {
  id?: true
  funcionario_id?: true
  sala_id?: true
}

export type AcessosSumAggregateInputType = {
  id?: true
  funcionario_id?: true
  sala_id?: true
}

export type AcessosMinAggregateInputType = {
  id?: true
  funcionario_id?: true
  sala_id?: true
  data?: true
  hora_entrada?: true
  hora_saida?: true
}

export type AcessosMaxAggregateInputType = {
  id?: true
  funcionario_id?: true
  sala_id?: true
  data?: true
  hora_entrada?: true
  hora_saida?: true
}

export type AcessosCountAggregateInputType = {
  id?: true
  funcionario_id?: true
  sala_id?: true
  data?: true
  hora_entrada?: true
  hora_saida?: true
  _all?: true
}

export type AcessosAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which acessos to aggregate.
   */
  where?: Prisma.acessosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of acessos to fetch.
   */
  orderBy?: Prisma.acessosOrderByWithRelationInput | Prisma.acessosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.acessosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` acessos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` acessos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned acessos
  **/
  _count?: true | AcessosCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AcessosAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AcessosSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AcessosMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AcessosMaxAggregateInputType
}

export type GetAcessosAggregateType<T extends AcessosAggregateArgs> = {
      [P in keyof T & keyof AggregateAcessos]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAcessos[P]>
    : Prisma.GetScalarType<T[P], AggregateAcessos[P]>
}




export type acessosGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.acessosWhereInput
  orderBy?: Prisma.acessosOrderByWithAggregationInput | Prisma.acessosOrderByWithAggregationInput[]
  by: Prisma.AcessosScalarFieldEnum[] | Prisma.AcessosScalarFieldEnum
  having?: Prisma.acessosScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AcessosCountAggregateInputType | true
  _avg?: AcessosAvgAggregateInputType
  _sum?: AcessosSumAggregateInputType
  _min?: AcessosMinAggregateInputType
  _max?: AcessosMaxAggregateInputType
}

export type AcessosGroupByOutputType = {
  id: number
  funcionario_id: number | null
  sala_id: number | null
  data: Date | null
  hora_entrada: Date | null
  hora_saida: Date | null
  _count: AcessosCountAggregateOutputType | null
  _avg: AcessosAvgAggregateOutputType | null
  _sum: AcessosSumAggregateOutputType | null
  _min: AcessosMinAggregateOutputType | null
  _max: AcessosMaxAggregateOutputType | null
}

type GetAcessosGroupByPayload<T extends acessosGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AcessosGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AcessosGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AcessosGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AcessosGroupByOutputType[P]>
      }
    >
  >



export type acessosWhereInput = {
  AND?: Prisma.acessosWhereInput | Prisma.acessosWhereInput[]
  OR?: Prisma.acessosWhereInput[]
  NOT?: Prisma.acessosWhereInput | Prisma.acessosWhereInput[]
  id?: Prisma.IntFilter<"acessos"> | number
  funcionario_id?: Prisma.IntNullableFilter<"acessos"> | number | null
  sala_id?: Prisma.IntNullableFilter<"acessos"> | number | null
  data?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
  hora_entrada?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
  hora_saida?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
}

export type acessosOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_id?: Prisma.SortOrderInput | Prisma.SortOrder
  data?: Prisma.SortOrderInput | Prisma.SortOrder
  hora_entrada?: Prisma.SortOrderInput | Prisma.SortOrder
  hora_saida?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type acessosWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.acessosWhereInput | Prisma.acessosWhereInput[]
  OR?: Prisma.acessosWhereInput[]
  NOT?: Prisma.acessosWhereInput | Prisma.acessosWhereInput[]
  funcionario_id?: Prisma.IntNullableFilter<"acessos"> | number | null
  sala_id?: Prisma.IntNullableFilter<"acessos"> | number | null
  data?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
  hora_entrada?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
  hora_saida?: Prisma.DateTimeNullableFilter<"acessos"> | Date | string | null
}, "id">

export type acessosOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrderInput | Prisma.SortOrder
  sala_id?: Prisma.SortOrderInput | Prisma.SortOrder
  data?: Prisma.SortOrderInput | Prisma.SortOrder
  hora_entrada?: Prisma.SortOrderInput | Prisma.SortOrder
  hora_saida?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.acessosCountOrderByAggregateInput
  _avg?: Prisma.acessosAvgOrderByAggregateInput
  _max?: Prisma.acessosMaxOrderByAggregateInput
  _min?: Prisma.acessosMinOrderByAggregateInput
  _sum?: Prisma.acessosSumOrderByAggregateInput
}

export type acessosScalarWhereWithAggregatesInput = {
  AND?: Prisma.acessosScalarWhereWithAggregatesInput | Prisma.acessosScalarWhereWithAggregatesInput[]
  OR?: Prisma.acessosScalarWhereWithAggregatesInput[]
  NOT?: Prisma.acessosScalarWhereWithAggregatesInput | Prisma.acessosScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"acessos"> | number
  funcionario_id?: Prisma.IntNullableWithAggregatesFilter<"acessos"> | number | null
  sala_id?: Prisma.IntNullableWithAggregatesFilter<"acessos"> | number | null
  data?: Prisma.DateTimeNullableWithAggregatesFilter<"acessos"> | Date | string | null
  hora_entrada?: Prisma.DateTimeNullableWithAggregatesFilter<"acessos"> | Date | string | null
  hora_saida?: Prisma.DateTimeNullableWithAggregatesFilter<"acessos"> | Date | string | null
}

export type acessosCreateInput = {
  id: number
  funcionario_id?: number | null
  sala_id?: number | null
  data?: Date | string | null
  hora_entrada?: Date | string | null
  hora_saida?: Date | string | null
}

export type acessosUncheckedCreateInput = {
  id: number
  funcionario_id?: number | null
  sala_id?: number | null
  data?: Date | string | null
  hora_entrada?: Date | string | null
  hora_saida?: Date | string | null
}

export type acessosUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  funcionario_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_entrada?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_saida?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type acessosUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  funcionario_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_entrada?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_saida?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type acessosCreateManyInput = {
  id: number
  funcionario_id?: number | null
  sala_id?: number | null
  data?: Date | string | null
  hora_entrada?: Date | string | null
  hora_saida?: Date | string | null
}

export type acessosUpdateManyMutationInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  funcionario_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_entrada?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_saida?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type acessosUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  funcionario_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  sala_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  data?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_entrada?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  hora_saida?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type acessosCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrder
  sala_id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora_entrada?: Prisma.SortOrder
  hora_saida?: Prisma.SortOrder
}

export type acessosAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrder
  sala_id?: Prisma.SortOrder
}

export type acessosMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrder
  sala_id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora_entrada?: Prisma.SortOrder
  hora_saida?: Prisma.SortOrder
}

export type acessosMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrder
  sala_id?: Prisma.SortOrder
  data?: Prisma.SortOrder
  hora_entrada?: Prisma.SortOrder
  hora_saida?: Prisma.SortOrder
}

export type acessosSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  funcionario_id?: Prisma.SortOrder
  sala_id?: Prisma.SortOrder
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableIntFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: Date | string | null
}



export type acessosSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  funcionario_id?: boolean
  sala_id?: boolean
  data?: boolean
  hora_entrada?: boolean
  hora_saida?: boolean
}, ExtArgs["result"]["acessos"]>



export type acessosSelectScalar = {
  id?: boolean
  funcionario_id?: boolean
  sala_id?: boolean
  data?: boolean
  hora_entrada?: boolean
  hora_saida?: boolean
}

export type acessosOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "funcionario_id" | "sala_id" | "data" | "hora_entrada" | "hora_saida", ExtArgs["result"]["acessos"]>

export type $acessosPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "acessos"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    funcionario_id: number | null
    sala_id: number | null
    data: Date | null
    hora_entrada: Date | null
    hora_saida: Date | null
  }, ExtArgs["result"]["acessos"]>
  composites: {}
}

export type acessosGetPayload<S extends boolean | null | undefined | acessosDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$acessosPayload, S>

export type acessosCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<acessosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AcessosCountAggregateInputType | true
  }

export interface acessosDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['acessos'], meta: { name: 'acessos' } }
  /**
   * Find zero or one Acessos that matches the filter.
   * @param {acessosFindUniqueArgs} args - Arguments to find a Acessos
   * @example
   * // Get one Acessos
   * const acessos = await prisma.acessos.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends acessosFindUniqueArgs>(args: Prisma.SelectSubset<T, acessosFindUniqueArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Acessos that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {acessosFindUniqueOrThrowArgs} args - Arguments to find a Acessos
   * @example
   * // Get one Acessos
   * const acessos = await prisma.acessos.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends acessosFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, acessosFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Acessos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosFindFirstArgs} args - Arguments to find a Acessos
   * @example
   * // Get one Acessos
   * const acessos = await prisma.acessos.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends acessosFindFirstArgs>(args?: Prisma.SelectSubset<T, acessosFindFirstArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Acessos that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosFindFirstOrThrowArgs} args - Arguments to find a Acessos
   * @example
   * // Get one Acessos
   * const acessos = await prisma.acessos.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends acessosFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, acessosFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Acessos that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Acessos
   * const acessos = await prisma.acessos.findMany()
   * 
   * // Get first 10 Acessos
   * const acessos = await prisma.acessos.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const acessosWithIdOnly = await prisma.acessos.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends acessosFindManyArgs>(args?: Prisma.SelectSubset<T, acessosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Acessos.
   * @param {acessosCreateArgs} args - Arguments to create a Acessos.
   * @example
   * // Create one Acessos
   * const Acessos = await prisma.acessos.create({
   *   data: {
   *     // ... data to create a Acessos
   *   }
   * })
   * 
   */
  create<T extends acessosCreateArgs>(args: Prisma.SelectSubset<T, acessosCreateArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Acessos.
   * @param {acessosCreateManyArgs} args - Arguments to create many Acessos.
   * @example
   * // Create many Acessos
   * const acessos = await prisma.acessos.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends acessosCreateManyArgs>(args?: Prisma.SelectSubset<T, acessosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Delete a Acessos.
   * @param {acessosDeleteArgs} args - Arguments to delete one Acessos.
   * @example
   * // Delete one Acessos
   * const Acessos = await prisma.acessos.delete({
   *   where: {
   *     // ... filter to delete one Acessos
   *   }
   * })
   * 
   */
  delete<T extends acessosDeleteArgs>(args: Prisma.SelectSubset<T, acessosDeleteArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Acessos.
   * @param {acessosUpdateArgs} args - Arguments to update one Acessos.
   * @example
   * // Update one Acessos
   * const acessos = await prisma.acessos.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends acessosUpdateArgs>(args: Prisma.SelectSubset<T, acessosUpdateArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Acessos.
   * @param {acessosDeleteManyArgs} args - Arguments to filter Acessos to delete.
   * @example
   * // Delete a few Acessos
   * const { count } = await prisma.acessos.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends acessosDeleteManyArgs>(args?: Prisma.SelectSubset<T, acessosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Acessos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Acessos
   * const acessos = await prisma.acessos.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends acessosUpdateManyArgs>(args: Prisma.SelectSubset<T, acessosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create or update one Acessos.
   * @param {acessosUpsertArgs} args - Arguments to update or create a Acessos.
   * @example
   * // Update or create a Acessos
   * const acessos = await prisma.acessos.upsert({
   *   create: {
   *     // ... data to create a Acessos
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Acessos we want to update
   *   }
   * })
   */
  upsert<T extends acessosUpsertArgs>(args: Prisma.SelectSubset<T, acessosUpsertArgs<ExtArgs>>): Prisma.Prisma__acessosClient<runtime.Types.Result.GetResult<Prisma.$acessosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Acessos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosCountArgs} args - Arguments to filter Acessos to count.
   * @example
   * // Count the number of Acessos
   * const count = await prisma.acessos.count({
   *   where: {
   *     // ... the filter for the Acessos we want to count
   *   }
   * })
  **/
  count<T extends acessosCountArgs>(
    args?: Prisma.Subset<T, acessosCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AcessosCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Acessos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AcessosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AcessosAggregateArgs>(args: Prisma.Subset<T, AcessosAggregateArgs>): Prisma.PrismaPromise<GetAcessosAggregateType<T>>

  /**
   * Group by Acessos.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {acessosGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends acessosGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: acessosGroupByArgs['orderBy'] }
      : { orderBy?: acessosGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, acessosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAcessosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the acessos model
 */
readonly fields: acessosFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for acessos.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__acessosClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the acessos model
 */
export interface acessosFieldRefs {
  readonly id: Prisma.FieldRef<"acessos", 'Int'>
  readonly funcionario_id: Prisma.FieldRef<"acessos", 'Int'>
  readonly sala_id: Prisma.FieldRef<"acessos", 'Int'>
  readonly data: Prisma.FieldRef<"acessos", 'DateTime'>
  readonly hora_entrada: Prisma.FieldRef<"acessos", 'DateTime'>
  readonly hora_saida: Prisma.FieldRef<"acessos", 'DateTime'>
}
    

// Custom InputTypes
/**
 * acessos findUnique
 */
export type acessosFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter, which acessos to fetch.
   */
  where: Prisma.acessosWhereUniqueInput
}

/**
 * acessos findUniqueOrThrow
 */
export type acessosFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter, which acessos to fetch.
   */
  where: Prisma.acessosWhereUniqueInput
}

/**
 * acessos findFirst
 */
export type acessosFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter, which acessos to fetch.
   */
  where?: Prisma.acessosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of acessos to fetch.
   */
  orderBy?: Prisma.acessosOrderByWithRelationInput | Prisma.acessosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for acessos.
   */
  cursor?: Prisma.acessosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` acessos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` acessos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of acessos.
   */
  distinct?: Prisma.AcessosScalarFieldEnum | Prisma.AcessosScalarFieldEnum[]
}

/**
 * acessos findFirstOrThrow
 */
export type acessosFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter, which acessos to fetch.
   */
  where?: Prisma.acessosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of acessos to fetch.
   */
  orderBy?: Prisma.acessosOrderByWithRelationInput | Prisma.acessosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for acessos.
   */
  cursor?: Prisma.acessosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` acessos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` acessos.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of acessos.
   */
  distinct?: Prisma.AcessosScalarFieldEnum | Prisma.AcessosScalarFieldEnum[]
}

/**
 * acessos findMany
 */
export type acessosFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter, which acessos to fetch.
   */
  where?: Prisma.acessosWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of acessos to fetch.
   */
  orderBy?: Prisma.acessosOrderByWithRelationInput | Prisma.acessosOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing acessos.
   */
  cursor?: Prisma.acessosWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` acessos from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` acessos.
   */
  skip?: number
  distinct?: Prisma.AcessosScalarFieldEnum | Prisma.AcessosScalarFieldEnum[]
}

/**
 * acessos create
 */
export type acessosCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * The data needed to create a acessos.
   */
  data: Prisma.XOR<Prisma.acessosCreateInput, Prisma.acessosUncheckedCreateInput>
}

/**
 * acessos createMany
 */
export type acessosCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many acessos.
   */
  data: Prisma.acessosCreateManyInput | Prisma.acessosCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * acessos update
 */
export type acessosUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * The data needed to update a acessos.
   */
  data: Prisma.XOR<Prisma.acessosUpdateInput, Prisma.acessosUncheckedUpdateInput>
  /**
   * Choose, which acessos to update.
   */
  where: Prisma.acessosWhereUniqueInput
}

/**
 * acessos updateMany
 */
export type acessosUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update acessos.
   */
  data: Prisma.XOR<Prisma.acessosUpdateManyMutationInput, Prisma.acessosUncheckedUpdateManyInput>
  /**
   * Filter which acessos to update
   */
  where?: Prisma.acessosWhereInput
  /**
   * Limit how many acessos to update.
   */
  limit?: number
}

/**
 * acessos upsert
 */
export type acessosUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * The filter to search for the acessos to update in case it exists.
   */
  where: Prisma.acessosWhereUniqueInput
  /**
   * In case the acessos found by the `where` argument doesn't exist, create a new acessos with this data.
   */
  create: Prisma.XOR<Prisma.acessosCreateInput, Prisma.acessosUncheckedCreateInput>
  /**
   * In case the acessos was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.acessosUpdateInput, Prisma.acessosUncheckedUpdateInput>
}

/**
 * acessos delete
 */
export type acessosDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
  /**
   * Filter which acessos to delete.
   */
  where: Prisma.acessosWhereUniqueInput
}

/**
 * acessos deleteMany
 */
export type acessosDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which acessos to delete
   */
  where?: Prisma.acessosWhereInput
  /**
   * Limit how many acessos to delete.
   */
  limit?: number
}

/**
 * acessos without action
 */
export type acessosDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the acessos
   */
  select?: Prisma.acessosSelect<ExtArgs> | null
  /**
   * Omit specific fields from the acessos
   */
  omit?: Prisma.acessosOmit<ExtArgs> | null
}
